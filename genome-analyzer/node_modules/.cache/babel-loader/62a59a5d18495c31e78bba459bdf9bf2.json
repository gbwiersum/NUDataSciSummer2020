{"ast":null,"code":"var _jsxFileName = \"/Users/ayon/Documents/Development/CIS395-Enterprise-Data-Science/FinalProject/NUDataSciSummer2020/genome-analyzer/src/pages/Home.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Ripple } from 'react-spinners-css';\nimport { MdHelp } from \"react-icons/md\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n\n    this.inputMethod = () => {\n      let i = !this.state.input;\n      this.setState({\n        input: i\n      });\n    };\n\n    this.getData = async file => {\n      this.setState({\n        predicted: false\n      });\n      this.setState({\n        loading: true\n      });\n      console.log('About to send POST');\n      await axios.post(\"http://localhost:5000/predict_upload\", file, {}).then(response => this.setState({\n        prediction: response.data\n      }));\n      this.setState({\n        loading: false\n      });\n      this.setState({\n        predicted: true\n      });\n      console.log(this.state.prediction);\n      console.log('Data POSTed');\n    };\n\n    this.uploadHandler = async event => {\n      this.setState({\n        loading: true\n      });\n      console.log(event.target.files[0]);\n      const data = new FormData();\n      data.append('file', event.target.files[0]);\n      console.log(data);\n      this.getData(data); //https://genomeanalyzer.wl.r.appspot.com\n    };\n\n    this.infoToggle = () => {\n      this.setState({\n        info: !this.state.info\n      });\n    };\n\n    this.state = {\n      prediction: 0,\n      predicted: false,\n      virusName: '',\n      loading: false,\n      info: false\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"float\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, \"Machine learning powered viral genome classification.\"), this.state.isPredicted ? /*#__PURE__*/React.createElement(\"p\", {\n      class: \"Alert\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 35\n      }\n    }, this.state.stopSignPrediction) : null, this.state.loading ? null : /*#__PURE__*/React.createElement(\"div\", {\n      className: \"inputSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"custom-file-upload\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      className: \"Input\",\n      type: \"file\",\n      name: \"file\",\n      onChange: this.uploadHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }), \"Upload file\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"help\",\n      onClick: () => this.infoToggle(),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MdHelp, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 68\n      }\n    })), this.state.info ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 28\n      }\n    }, \"Upload a .txt file containing a viral genome segment in FASTA format.\") : null), this.state.loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loadingSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Ripple, {\n      className: \"loading\",\n      color: \"white\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }\n    }, \"This can take several minutes. Great time to make a coffee.\")) : null, this.state.predicted ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"predictionSection\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 15\n      }\n    }, \"This virus is genetically closest to \", this.state.prediction, \".\")) : null));\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/ayon/Documents/Development/CIS395-Enterprise-Data-Science/FinalProject/NUDataSciSummer2020/genome-analyzer/src/pages/Home.js"],"names":["React","Component","axios","Ripple","MdHelp","Home","constructor","inputMethod","i","state","input","setState","getData","file","predicted","loading","console","log","post","then","response","prediction","data","uploadHandler","event","target","files","FormData","append","infoToggle","info","virusName","render","isPredicted","stopSignPrediction"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Ripple} from 'react-spinners-css';\nimport { MdHelp } from \"react-icons/md\";\n\nclass Home extends Component {\n  constructor() {\n    super();\n    this.state = {\n      prediction:0,\n      predicted:false,\n      virusName:'',\n      loading:false,\n      info:false\n    };\n  }\n\n  inputMethod = () => {\n    let i = !this.state.input;\n    this.setState({input:i});\n  }\n\n  getData = async (file) => {\n    this.setState({predicted:false})\n    this.setState({loading:true})\n    console.log('About to send POST')\n    await axios.post(\"http://localhost:5000/predict_upload\", file, {\n    }).then(response =>\n      this.setState({prediction:response.data})\n    )\n    this.setState({loading:false})\n    this.setState({predicted:true})\n    console.log(this.state.prediction)\n    console.log('Data POSTed')\n  }\n\n uploadHandler =  async (event) => {\n    this.setState({loading:true})\n    console.log(event.target.files[0])\n    const data = new FormData()\n    data.append('file', event.target.files[0])\n    console.log(data)\n    this.getData(data)\n    //https://genomeanalyzer.wl.r.appspot.com\n}\n\ninfoToggle = () => {\n  this.setState({info:!this.state.info});\n}\n\nrender(){\n  return(\n    <React.Fragment>\n      <div className=\"hero\"></div>\n      <div className=\"float\">\n        <h1>Machine learning powered viral genome classification.</h1>\n        {this.state.isPredicted ? <p class=\"Alert\">{this.state.stopSignPrediction}</p> : null}\n\n        {this.state.loading ? null:\n        <div className=\"inputSection\">\n        <label className=\"custom-file-upload\">\n          <input className=\"Input\" type=\"file\" name=\"file\" onChange={this.uploadHandler}/>\n            Upload file\n        </label>\n        <button className='help' onClick={() => this.infoToggle()}><MdHelp/></button>\n        {this.state.info ? <p>Upload a .txt file containing a viral genome segment in FASTA format.</p>: null}\n        </div>\n        }\n\n        {this.state.loading ?\n          <div className=\"loadingSection\">\n            <Ripple className='loading' color='white'/>\n            <p>This can take several minutes. Great time to make a coffee.</p>\n          </div> : null}\n\n          {this.state.predicted ?\n            <div className=\"predictionSection\">\n              <p>This virus is genetically closest to {this.state.prediction}.</p>\n            </div> : null}\n\n\n\n\n      </div>\n    </React.Fragment>\n  )\n}\n\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}